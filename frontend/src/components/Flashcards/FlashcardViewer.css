/* Flipping inspired by: https://www.geeksforgeeks.org/design-a-flip-card-effect-using-reactjs/#approach-2-using-reactcardflip-package*/

.flashcard-viewer {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    width: 100%;
    max-width: 700px;
    margin: 1rem auto; /* Center the viewer */
    box-sizing: border-box;
  }
  
  .collection-title {
    margin-bottom: 1.5rem;
    color: #333;
    text-align: center;
    font-size: 1.8rem; /* Adjust size */
  }
  
  .flashcard-container {
    width: 100%;
    aspect-ratio: 16 / 10; /* Slightly less wide than 16/9 */
    max-height: 450px; /* Limit max height */
    cursor: pointer; /* Indicate clickable for flipping */
    position: relative; /* For perspective and positioning flipper */
    margin-bottom: 1.5rem;
    box-sizing: border-box;
    perspective: 1000px;
  }
  
  .flashcard-flipper {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);
  }
  
  .flashcard-flipper.flipped {
    transform: rotateY(180deg);
  }
  
  .flashcard-face {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    background-color: #fff;
    border: 1px solid #d1d1d1;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem; /* Inner padding for content within the face */
    text-align: center;
    overflow: hidden; /* Prevent content spill from face */
    box-sizing: border-box;
  }
  
  .flashcard-back {
    transform: rotateY(180deg);
  }
  
  .flashcard-content {
    max-width: 100%;
    max-height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  /* Styles for when content is text */
  .flashcard-content.content-text p {
    font-size: 1.6rem; /* Make text reasonably large */
    margin: 0;
    color: #212529;
    white-space: pre-wrap; /* Respect newlines in the text */
    line-height: 1.5;
  }
  
  /* Styles for when content is image */
  .flashcard-content.content-image img {
    display: block;
    max-width: 100%;
    max-height: 100%;
    /* Calculates max height relative to container padding */
    max-height: calc(450px - 4rem); /* max-height of container minus top/bottom padding */
    object-fit: contain; /* Scale image nicely within bounds */
    border-radius: 4px;
  }
  
  /* Navigation bar at the bottom */
  .flashcard-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding-top: 1rem;
    border-top: 1px solid #eee;
  }
  
  /* General button style */
  .nav-button {
    padding: 0.7em 1.4em;
    border: 1px solid #ccc;
    background-color: #f8f9fa;
    color: #333;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 500;
    transition: background-color 0.2s ease, border-color 0.2s ease;
  }
  
  /* Hover state for enabled buttons */
  .nav-button:hover:not(:disabled) {
    background-color: #e9ecef;
    border-color: #bbb;
  }
  
  /* Disabled state for buttons */
  .nav-button:disabled {
    color: #aaa;
    background-color: #f8f9fa;
    border-color: #eee;
    cursor: not-allowed;
  }
  
  /* Counter text between buttons */
  .card-counter {
    font-size: 1rem;
    color: #555;
    font-weight: 600;
    margin: 0 1rem;
    flex-shrink: 0; /* Prevent counter from shrinking */
  }
  
  /* Loading/Error/Empty Status Messages */
  .flashcard-viewer-status {
      padding: 3rem 1rem;
      text-align: center;
      color: #6c757d;
      font-size: 1.1rem;
      font-style: italic;
      width: 100%;
  }
  .flashcard-viewer-status.error {
      color: #dc3545;
      font-weight: bold;
      font-style: normal;
  }