{
	"info": {
		"_postman_id": "000ee3a2-580c-42a9-8b7d-fb98f6a8fc43",
		"name": "Borgertinget API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43171919"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Parse the JSON response\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// Set the token into an environment variable\r",
											"pm.collectionVariables.set(\"adminToken\", jsonData.token);\r",
											"\r",
											"console.log(\"Admin Token Set:\", jsonData.token);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrUsername\": \"superuser@borgertinget.dk\",\n  \"password\": \"Borgertinget123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailOrUsername\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"register"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"register"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Verify user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Users/verify?userId=<integer>&token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"verify"
									],
									"query": [
										{
											"key": "userId",
											"value": "<integer>"
										},
										{
											"key": "token",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/verify?userId=<integer>&token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"verify"
											],
											"query": [
												{
													"key": "userId",
													"value": "<integer>"
												},
												{
													"key": "token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Login/Register through Google",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Users/login-google?clientReturnUrl=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"login-google"
									],
									"query": [
										{
											"key": "clientReturnUrl",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/login-google?clientReturnUrl=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"login-google"
											],
											"query": [
												{
													"key": "clientReturnUrl",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Google Callback",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Users/HandleGoogleCallback?returnUrl=<string>&remoteError=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"HandleGoogleCallback"
									],
									"query": [
										{
											"key": "returnUrl",
											"value": "<string>"
										},
										{
											"key": "remoteError",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/HandleGoogleCallback?returnUrl=<string>&remoteError=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"HandleGoogleCallback"
											],
											"query": [
												{
													"key": "returnUrl",
													"value": "<string>"
												},
												{
													"key": "remoteError",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reset Password",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/reset-password?userId=<integer>&token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"reset-password"
									],
									"query": [
										{
											"key": "userId",
											"value": "<integer>"
										},
										{
											"key": "token",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/reset-password?userId=<integer>&token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"reset-password"
											],
											"query": [
												{
													"key": "userId",
													"value": "<integer>"
												},
												{
													"key": "token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Forgot Password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"forgot-password"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"forgot-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Administrator",
					"item": [
						{
							"name": "GET all flashcard collection titles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetAllFlashcardCollectionTitles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetAllFlashcardCollectionTitles"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetAllFlashcardCollectionTitles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetAllFlashcardCollectionTitles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "POST upload image for Flashcard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"let fullPath = jsonData.imagePath;\r",
											"\r",
											"// Use RegExp to extract the filename after \"/uploads/flashcards/\"\r",
											"let match = fullPath.match(/\\/uploads\\/flashcards\\/(.+)$/);\r",
											"\r",
											"if (match && match[1]) {\r",
											"    pm.collectionVariables.set(\"imageFilename\", match[1]);\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1f03966e-8312-4e30-b98f-8ba111ccc963"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/UploadImage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"UploadImage"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/UploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"UploadImage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "POST Flashcard collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Extract the ID using RegExp from the plain text response\r",
											"let responseBody = pm.response.text();\r",
											"\r",
											"let match = responseBody.match(/ID\\s+(\\d+)/);\r",
											"\r",
											"if (match && match[1]) {\r",
											"    let collectionId = parseInt(match[1]);\r",
											"    pm.collectionVariables.set(\"flashcardCollectionId\", collectionId);\r",
											"    console.log(\"Flashcard Collection ID set to:\", collectionId);\r",
											"} else {\r",
											"    console.log(\"No ID found in response.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collectionId\": \"100\",\n  \"title\": \"Lorem Ipsum Collection\",\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": 1,\n      \"frontContentType\": \"Text\",\n      \"frontText\": \"Lorem ipsum dolor sit amet\",\n      \"frontImagePath\": \"\",\n      \"backContentType\": \"Text\",\n      \"backText\": \"Consectetur adipiscing elit\",\n      \"backImagePath\": \"\"\n    },\n    {\n      \"flashcardId\": 2,\n      \"frontContentType\": \"Image\",\n      \"frontText\": \"\",\n      \"frontImagePath\": \"/uploads/flashcards/{{imageFilename}}\",\n      \"backContentType\": \"text\",\n      \"backText\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"backImagePath\": \"\"\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/PostFlashcardCollection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"PostFlashcardCollection"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collectionId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    },\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/PostFlashcardCollection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"PostFlashcardCollection"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET flashcard collection by title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetFlashcardCollectionByTitle?title=Lorem Ipsum Collection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetFlashcardCollectionByTitle"
									],
									"query": [
										{
											"key": "title",
											"value": "Lorem Ipsum Collection"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetFlashcardCollectionByTitle?title=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetFlashcardCollectionByTitle"
											],
											"query": [
												{
													"key": "title",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "PUT update flashcard collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collectionId\": \"100\",\n  \"title\": \"Lorem Ipsum\",\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": 1,\n      \"frontContentType\": \"Text\",\n      \"frontText\": \"Lorem ipsum dolor sit amet\",\n      \"frontImagePath\": \"\",\n      \"backContentType\": \"Text\",\n      \"backText\": \"Consectetur adipiscing elit\",\n      \"backImagePath\": \"\"\n    },\n    {\n      \"flashcardId\": 2,\n      \"frontContentType\": \"Image\",\n      \"frontText\": \"\",\n      \"frontImagePath\": \"/uploads/flashcards/{{imageFilename}}\",\n      \"backContentType\": \"text\",\n      \"backText\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"backImagePath\": \"\"\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/UpdateFlashcardCollection/:collectionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"UpdateFlashcardCollection",
										":collectionId"
									],
									"query": [
										{
											"key": "",
											"value": "3",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "{{flashcardCollectionId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collectionId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    },\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/UpdateFlashcardCollection/:collectionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"UpdateFlashcardCollection",
												":collectionId"
											],
											"variable": [
												{
													"key": "collectionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "DELETE flashcard collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/DeleteFlashcardCollection?collectionId=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"DeleteFlashcardCollection"
									],
									"query": [
										{
											"key": "collectionId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/DeleteFlashcardCollection?collectionId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"DeleteFlashcardCollection"
											],
											"query": [
												{
													"key": "collectionId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET user by username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/username?username=borgertinget_superuser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"username"
									],
									"query": [
										{
											"key": "username",
											"value": "borgertinget_superuser"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/username?username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"username"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update user by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"borgertinget_superloser\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										":userId"
									],
									"query": [
										{
											"key": "",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET all Polidle quotes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetAllQuotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetAllQuotes"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetAllQuotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetAllQuotes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET Polidle Quote by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetQuoteById?quoteId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetQuoteById"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetQuoteById?quoteId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetQuoteById"
											],
											"query": [
												{
													"key": "quoteId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "PUT update Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteId\": \"1\",\n  \"quoteText\": \"Postman\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/EditQuote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"EditQuote"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<integer>\",\n  \"quoteText\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/EditQuote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"EditQuote"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET aktor id by twitter id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/lookup/aktorId?twitterId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"lookup",
										"aktorId"
									],
									"query": [
										{
											"key": "twitterId",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/lookup/aktorId?twitterId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"lookup",
												"aktorId"
											],
											"query": [
												{
													"key": "twitterId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Aktor",
					"item": [
						{
							"name": "Get all Politicians",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										"all"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												"all"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "GET Politician by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "206",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"biografi\": \"<string>\",\n  \"fornavn\": \"<string>\",\n  \"efternavn\": \"<string>\",\n  \"typeid\": \"<integer>\",\n  \"gruppeNavnKort\": \"<string>\",\n  \"navn\": \"<string>\",\n  \"opdateringsdato\": \"<dateTime>\",\n  \"periodeid\": \"<integer>\",\n  \"slutdato\": \"<dateTime>\",\n  \"startdato\": \"<dateTime>\",\n  \"party\": \"<string>\",\n  \"partyShortname\": \"<string>\",\n  \"sex\": \"<string>\",\n  \"born\": \"<string>\",\n  \"educationStatistic\": \"<string>\",\n  \"pictureMiRes\": \"<string>\",\n  \"functionFormattedTitle\": \"<string>\",\n  \"functionStartDate\": \"<string>\",\n  \"positionsOfTrust\": \"<string>\",\n  \"email\": \"<string>\",\n  \"ministerTitel\": \"<string>\",\n  \"ministers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"spokesmen\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"parliamentaryPositionsOfTrust\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"constituencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nominations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"educations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"occupations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"publicationTitles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"quotes\": [\n    {\n      \"quoteText\": \"<string>\",\n      \"quoteId\": \"<integer>\",\n      \"aktorId\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    },\n    {\n      \"quoteText\": \"<string>\",\n      \"quoteId\": \"<integer>\",\n      \"aktorId\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    }\n  ],\n  \"gamemodeTrackings\": [\n    {\n      \"gameMode\": 1,\n      \"politikerId\": \"<integer>\",\n      \"lastSelectedDate\": \"<date>\",\n      \"algoWeight\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    },\n    {\n      \"gameMode\": 0,\n      \"politikerId\": \"<integer>\",\n      \"lastSelectedDate\": \"<date>\",\n      \"algoWeight\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    }\n  ],\n  \"dailySelections\": [\n    {\n      \"gameMode\": 1,\n      \"selectionDate\": \"<date>\",\n      \"selectedPolitikerID\": \"<integer>\",\n      \"selectedQuoteText\": \"<string>\",\n      \"selectedPolitiker\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    },\n    {\n      \"gameMode\": 2,\n      \"selectionDate\": \"<date>\",\n      \"selectedPolitikerID\": \"<integer>\",\n      \"selectedQuoteText\": \"<string>\",\n      \"selectedPolitiker\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Fetch all  Parties and Politicians",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/fetch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										"fetch"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/fetch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												"fetch"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET party by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/GetParty/:partyName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										"GetParty",
										":partyName"
									],
									"variable": [
										{
											"key": "partyName",
											"value": "Venstre",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/GetParty/:partyName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												"GetParty",
												":partyName"
											],
											"variable": [
												{
													"key": "partyName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Calendar",
					"item": [
						{
							"name": "events",
							"item": [
								{
									"name": "GET all events",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"startDateTimeUtc\": \"<dateTime>\",\n    \"location\": \"<string>\",\n    \"sourceUrl\": \"<string>\",\n    \"interestedCount\": \"<integer>\",\n    \"isCurrentUserInterested\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"startDateTimeUtc\": \"<dateTime>\",\n    \"location\": \"<string>\",\n    \"sourceUrl\": \"<string>\",\n    \"interestedCount\": \"<integer>\",\n    \"isCurrentUserInterested\": \"<boolean>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Create Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"// Parse the JSON response\r",
													"let jsonData = pm.response.json();\r",
													"\r",
													"// Set the token into an collectionVariables variable\r",
													"pm.collectionVariables.set(\"EventToUpdate\", jsonData.id);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"1\",\n  \"title\": \"Lorem Ipsum Dolor Sit Amet\",\n  \"startDateTimeUtc\": \"2025-06-15T14:00:00Z\",\n  \"location\": \"1234 Lorem Street, Ipsum City\",\n  \"sourceUrl\": \"https://example.com/events/lorem-ipsum\",\n  \"interestedCount\": 42,\n  \"isCurrentUserInterested\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"startDateTimeUtc\": \"<dateTime>\",\n  \"location\": \"<string>\",\n  \"sourceUrl\": \"<string>\",\n  \"interestedCount\": \"<integer>\",\n  \"isCurrentUserInterested\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"startDateTimeUtc\": \"<dateTime>\",\n  \"location\": \"<string>\",\n  \"sourceUrl\": \"<string>\",\n  \"interestedCount\": \"<integer>\",\n  \"isCurrentUserInterested\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "GET amount intrested in Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/get-amount-interested/:eventId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												"get-amount-interested",
												":eventId"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/get-amount-interested/:eventId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														"get-amount-interested",
														":eventId"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<integer>"
										}
									]
								},
								{
									"name": "Update Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"{{EventToUpdate}}\",\n  \"title\": \"Lorem Ipsum Dolor Sit Amet\",\n  \"startDateTimeUtc\": \"2025-05-26T14:00:00Z\",\n  \"location\": \"1234 Lorem Street, Ipsum City\",\n  \"sourceUrl\": \"https://example.com/events/lorem-ipsum\",\n  \"interestedCount\": 42,\n  \"isCurrentUserInterested\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"startDateTimeUtc\": \"<dateTime>\",\n  \"location\": \"<string>\",\n  \"sourceUrl\": \"<string>\",\n  \"interestedCount\": \"<integer>\",\n  \"isCurrentUserInterested\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Toggle intrest in event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/toggle-interest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												"toggle-interest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/toggle-interest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														"toggle-interest",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Run Calendar scraper",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Calendar/run-calendar-scraper",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Calendar",
										"run-calendar-scraper"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/run-calendar-scraper",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"run-calendar-scraper"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "GET your own subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"subscriptions"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"subscriptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "feed",
					"item": [
						{
							"name": "GET your feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/feed?page=1&pageSize=5&politicianId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"feed"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "5"
										},
										{
											"key": "politicianId",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/feed?page=1&pageSize=5&politicianId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"feed"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "5"
												},
												{
													"key": "politicianId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"tweets\": [\n    {\n      \"authorHandle\": \"<string>\",\n      \"authorName\": \"<string>\",\n      \"text\": \"<string>\",\n      \"twitterTweetId\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"likes\": \"<integer>\",\n      \"retweets\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\"\n    },\n    {\n      \"authorHandle\": \"<string>\",\n      \"authorName\": \"<string>\",\n      \"text\": \"<string>\",\n      \"twitterTweetId\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"likes\": \"<integer>\",\n      \"retweets\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\"\n    }\n  ],\n  \"hasMore\": \"<boolean>\",\n  \"latestPolls\": [\n    {\n      \"id\": \"<integer>\",\n      \"question\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"endedAt\": \"<dateTime>\",\n      \"isActive\": \"<boolean>\",\n      \"politicianId\": \"<integer>\",\n      \"politicianName\": \"<string>\",\n      \"politicianHandle\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        }\n      ],\n      \"currentUserVoteOptionId\": \"<integer>\",\n      \"totalVotes\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"question\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"endedAt\": \"<dateTime>\",\n      \"isActive\": \"<boolean>\",\n      \"politicianId\": \"<integer>\",\n      \"politicianName\": \"<string>\",\n      \"politicianHandle\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        }\n      ],\n      \"currentUserVoteOptionId\": \"<integer>\",\n      \"totalVotes\": \"<integer>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Flashcards",
					"item": [
						{
							"name": "GET all collections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Flashcards/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Flashcards",
										"collections"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Flashcards/collections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Flashcards",
												"collections"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"collectionId\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"displayOrder\": \"<integer>\"\n  },\n  {\n    \"collectionId\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"displayOrder\": \"<integer>\"\n  }\n]"
								}
							]
						},
						{
							"name": "GET collection by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Flashcards/collections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Flashcards",
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Flashcards/collections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Flashcards",
												"collections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"collectionId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    },\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Pages",
					"item": [
						{
							"name": "GET ALL pages by structure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/structure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										"structure"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/structure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												"structure"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"parentPageId\": \"<integer>\",\n    \"displayOrder\": \"<integer>\",\n    \"hasChildren\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"parentPageId\": \"<integer>\",\n    \"displayOrder\": \"<integer>\",\n    \"hasChildren\": \"<boolean>\"\n  }\n]"
								}
							]
						},
						{
							"name": "POST new page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"// Parse the JSON response\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// Set the token into an collectionVariables variable\r",
											"pm.collectionVariables.set(\"PageToChange\", jsonData.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Understanding Lorem Ipsum\",\n  \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id dolor id nibh ultricies vehicula ut id elit.\",\n  \"parentPageId\": null,\n  \"displayOrder\": 1,\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"What does 'Lorem ipsum' typically represent?\",\n      \"id\": 1,\n      \"options\": [\n        {\n          \"optionText\": \"Placeholder text in publishing\",\n          \"id\": 1,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"A type of ancient Roman currency\",\n          \"id\": 2,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    },\n    {\n      \"questionText\": \"Which phrase follows 'Lorem ipsum dolor sit amet'?\",\n      \"id\": 2,\n      \"options\": [\n        {\n          \"optionText\": \"Consectetur adipiscing elit\",\n          \"id\": 3,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"Sed do eiusmod tempor\",\n          \"id\": 4,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"displayOrder\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Pages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"previousSiblingId\": \"<integer>\",\n  \"nextSiblingId\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get page by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PageToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"previousSiblingId\": \"<integer>\",\n  \"nextSiblingId\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "GET order of child pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id/sectionorder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id",
										"sectionorder"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PageToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id/sectionorder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id",
												"sectionorder"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<integer>\",\n  \"<integer>\"\n]"
								}
							]
						},
						{
							"name": "PUT page by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": {{PageToChange}},\n  \"title\": \"Understanding Lorem Ipsum\",\n  \"content\": \"Lorem ipsum dolor sit amet.\",\n  \"parentPageId\": null,\n  \"displayOrder\": 1,\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"What does 'Lorem ipsum' typically represent?\",\n      \"id\": 1,\n      \"options\": [\n        {\n          \"optionText\": \"Placeholder text in publishing\",\n          \"id\": 1,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"A type of ancient Roman currency\",\n          \"id\": 2,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    },\n    {\n      \"questionText\": \"Which phrase follows 'Lorem ipsum dolor sit amet'?\",\n      \"id\": 2,\n      \"options\": [\n        {\n          \"optionText\": \"Consectetur adipiscing elit\",\n          \"id\": 3,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"Sed do eiusmod tempor\",\n          \"id\": 4,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PageToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"displayOrder\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "DELETE page by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PageToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Answers",
					"item": [
						{
							"name": "Check Answers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"questionId\": \"1\",\n  \"selectedAnswerOptionId\": \"1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Answers/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Answers",
										"check"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"questionId\": \"<integer>\",\n  \"selectedAnswerOptionId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Answers/check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Answers",
												"check"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isCorrect\": \"<boolean>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Party",
					"item": [
						{
							"name": "GET all parties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Party/Parties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Party",
										"Parties"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Party/Parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Parties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"partyId\": \"<integer>\",\n    \"partyName\": \"<string>\",\n    \"partyShortName\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"stats\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"chairmanId\": \"<integer>\",\n    \"viceChairmanId\": \"<integer>\",\n    \"secretaryId\": \"<integer>\",\n    \"spokesmanId\": \"<integer>\",\n    \"chairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 2,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"viceChairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"secretary\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"spokesman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 2,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"memberIds\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  {\n    \"partyId\": \"<integer>\",\n    \"partyName\": \"<string>\",\n    \"partyShortName\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"stats\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"chairmanId\": \"<integer>\",\n    \"viceChairmanId\": \"<integer>\",\n    \"secretaryId\": \"<integer>\",\n    \"spokesmanId\": \"<integer>\",\n    \"chairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 2,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"viceChairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"secretary\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 0,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"spokesman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"memberIds\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Update party by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain, application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"partyProgram\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin vitae nunc sed velit dignissim sodales.\",\n    \"politics\": \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\",\n    \"history\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus dapibus diam.\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Party/:partyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Party",
										":partyId"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "partyId",
											"value": "5"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"partyId\": \"<integer>\",\n  \"partyName\": \"<string>\",\n  \"partyShortName\": \"<string>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\",\n  \"stats\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"chairmanId\": \"<integer>\",\n  \"viceChairmanId\": \"<integer>\",\n  \"secretaryId\": \"<integer>\",\n  \"spokesmanId\": \"<integer>\",\n  \"chairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 2,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"viceChairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"secretary\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"spokesman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"memberIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get party by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Party/:partyName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Party",
										":partyName"
									],
									"variable": [
										{
											"key": "partyName",
											"value": "Venstre",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyName"
											],
											"variable": [
												{
													"key": "partyName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"partyId\": \"<integer>\",\n  \"partyName\": \"<string>\",\n  \"partyShortName\": \"<string>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\",\n  \"stats\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"chairmanId\": \"<integer>\",\n  \"viceChairmanId\": \"<integer>\",\n  \"secretaryId\": \"<integer>\",\n  \"spokesmanId\": \"<integer>\",\n  \"chairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 2,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"viceChairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"secretary\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"spokesman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"memberIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Polidle",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "Generate todays answers",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/polidle/admin/generate-today?overwrite=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"polidle",
												"admin",
												"generate-today"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "false"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-today?overwrite=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-today"
													],
													"query": [
														{
															"key": "overwrite",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-today?overwrite=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-today"
													],
													"query": [
														{
															"key": "overwrite",
															"value": "false"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								},
								{
									"name": "POST generate specific dates answers",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/polidle/admin/generate-specific-date?date=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"polidle",
												"admin",
												"generate-specific-date"
											],
											"query": [
												{
													"key": "date",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-specific-date?date=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-specific-date"
													],
													"query": [
														{
															"key": "date",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-specific-date?date=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-specific-date"
													],
													"query": [
														{
															"key": "date",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Seed aktor quotes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/polidle/admin/seed-all-aktor-quotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"polidle",
												"admin",
												"seed-all-aktor-quotes"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/seed-all-aktor-quotes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"seed-all-aktor-quotes"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/seed-all-aktor-quotes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"seed-all-aktor-quotes"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						},
						{
							"name": "GET todays quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/quote/today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"quote",
										"today"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"quoteText\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET todays photo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/photo/today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"photo",
										"today"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"photoUrl\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET todays classic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/classic/today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"classic",
										"today"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"politikerNavn\": \"<string>\",\n  \"pictureUrl\": \"<string>\",\n  \"køn\": \"<string>\",\n  \"partyShortname\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"region\": \"<string>\",\n  \"uddannelse\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET Search politicians",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/politicians?search=Troels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"politicians"
									],
									"query": [
										{
											"key": "search",
											"value": "Troels"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/politicians?search=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"politicians"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"politikerNavn\": \"<string>\",\n    \"pictureUrl\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"politikerNavn\": \"<string>\",\n    \"pictureUrl\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/politicians?search=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"politicians"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "POST guess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"206\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/guess",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"guess"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isCorrectGuess\": \"<boolean>\",\n  \"feedback\": {\n    \"commodo936\": 0,\n    \"proident_960\": 3,\n    \"id__8d\": 0\n  },\n  \"guessedPolitician\": {\n    \"id\": \"<integer>\",\n    \"politikerNavn\": \"<string>\",\n    \"pictureUrl\": \"<string>\",\n    \"køn\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"age\": \"<integer>\",\n    \"region\": \"<string>\",\n    \"uddannelse\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Polls",
					"item": [
						{
							"name": "GET all polls",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"question\": \"<string>\",\n    \"politicianTwitterId\": \"<integer>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"question\": \"<string>\",\n    \"politicianTwitterId\": \"<integer>\"\n  }\n]"
								}
							]
						},
						{
							"name": "POST poll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"// Parse the JSON response\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// Set the token into an environment variable\r",
											"pm.collectionVariables.set(\"PollToChange\", jsonData.id);\r",
											"\r",
											"let secondOptionId = jsonData.options[1].id;\r",
											"let incrementedId = secondOptionId + 1;\r",
											"\r",
											"pm.collectionVariables.set(\"PollToVote\", incrementedId);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": [\n    \"Lorem ipsum dolor\",\n    \"Sit amet consectetur\"\n  ],\n  \"politicianTwitterId\": 3,\n  \"question\": \"Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur?\",\n  \"endedAt\": \"2025-06-01T12:00:00Z\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"politicianTwitterId\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"endedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"isActive\": \"<boolean>\",\n  \"politicianId\": \"<integer>\",\n  \"politicianName\": \"<string>\",\n  \"politicianHandle\": \"<string>\",\n  \"options\": [\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    }\n  ],\n  \"currentUserVoteOptionId\": \"<integer>\",\n  \"totalVotes\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "GET poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PollToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"isActive\": \"<boolean>\",\n  \"politicianId\": \"<integer>\",\n  \"politicianName\": \"<string>\",\n  \"politicianHandle\": \"<string>\",\n  \"options\": [\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    }\n  ],\n  \"currentUserVoteOptionId\": \"<integer>\",\n  \"totalVotes\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "PUT poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": [\n    \"Lorem ipsum dolor\",\n    \"Sit amet consectetur\",\n    \"Adipiscing elit quisque\"\n  ],\n  \"politicianTwitterId\": 3,\n  \"question\": \"Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur?\",\n  \"endedAt\": \"2025-06-01T12:00:00Z\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PollToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"question\": \"<string>\",\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"politicianTwitterId\": \"<integer>\",\n  \"endedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Vote for poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"optionId\": \"{{PollToVote}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:pollId/vote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":pollId",
										"vote"
									],
									"variable": [
										{
											"key": "pollId",
											"value": "{{PollToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"optionId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:pollId/vote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":pollId",
												"vote"
											],
											"variable": [
												{
													"key": "pollId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "DELETE poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PollToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "GET Search Borgertinget",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Search?query=Troels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Search"
									],
									"query": [
										{
											"key": "query",
											"value": "Troels"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"dataType\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"aktorName\": \"<string>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"pictureUrl\": \"<string>\",\n    \"ministerTitle\": \"<string>\",\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"flashcardId\": \"<integer>\",\n    \"collectionId\": \"<integer>\",\n    \"collectionTitle\": \"<string>\",\n    \"frontText\": \"<string>\",\n    \"backText\": \"<string>\",\n    \"frontImagePath\": \"<string>\",\n    \"backImagePath\": \"<string>\",\n    \"suggest\": {\n      \"contexts\": {\n        \"adipisicing_4\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"input\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"weight\": \"<integer>\"\n    },\n    \"partyName\": \"<string>\",\n    \"partyShortNameFromParty\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"pageTitle\": \"<string>\",\n    \"pageContent\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"dataType\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"aktorName\": \"<string>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"pictureUrl\": \"<string>\",\n    \"ministerTitle\": \"<string>\",\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"flashcardId\": \"<integer>\",\n    \"collectionId\": \"<integer>\",\n    \"collectionTitle\": \"<string>\",\n    \"frontText\": \"<string>\",\n    \"backText\": \"<string>\",\n    \"frontImagePath\": \"<string>\",\n    \"backImagePath\": \"<string>\",\n    \"suggest\": {\n      \"contexts\": {\n        \"fugiat_1c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"est_d1d\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"occaecat_c00\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"input\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"weight\": \"<integer>\"\n    },\n    \"partyName\": \"<string>\",\n    \"partyShortNameFromParty\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"pageTitle\": \"<string>\",\n    \"pageContent\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET search sugestions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Search/suggest?prefix=Troels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Search",
										"suggest"
									],
									"query": [
										{
											"key": "prefix",
											"value": "Troels"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/suggest?prefix=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"suggest"
											],
											"query": [
												{
													"key": "prefix",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/suggest?prefix=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"suggest"
											],
											"query": [
												{
													"key": "prefix",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/suggest?prefix=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"suggest"
											],
											"query": [
												{
													"key": "prefix",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "ADMIN reindex Search",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Search/ensure-and-reindex",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Search",
										"ensure-and-reindex"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/ensure-and-reindex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"ensure-and-reindex"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/ensure-and-reindex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"ensure-and-reindex"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Subscription",
					"item": [
						{
							"name": "GET PoliticianTwitterId by AktorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Subscription/lookup/politicianTwitterId?aktorId=206",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Subscription",
										"lookup",
										"politicianTwitterId"
									],
									"query": [
										{
											"key": "aktorId",
											"value": "206"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Subscription/lookup/politicianTwitterId?aktorId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Subscription",
												"lookup",
												"politicianTwitterId"
											],
											"query": [
												{
													"key": "aktorId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Subscribe by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"politicianId\": \"3\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Subscription"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"politicianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Subscription"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unsubscribe to Politician by twitId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Subscription/:politicianTwitterId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Subscription",
										":politicianTwitterId"
									],
									"variable": [
										{
											"key": "politicianTwitterId",
											"value": "3",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Subscription/:politicianTwitterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Subscription",
												":politicianTwitterId"
											],
											"variable": [
												{
													"key": "politicianTwitterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{adminToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Parse the JSON response\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// Set the token into an collectionVariables variable\r",
											"pm.collectionVariables.set(\"userToken\", jsonData.token);\r",
											"\r",
											"console.log(\"Admin Token Set:\", jsonData.token);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrUsername\": \"Olivia\",\n  \"password\": \"Jkn36ftz\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailOrUsername\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Register",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"register"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"register"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Verify user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Users/verify?userId=<integer>&token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"verify"
									],
									"query": [
										{
											"key": "userId",
											"value": "<integer>"
										},
										{
											"key": "token",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/verify?userId=<integer>&token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"verify"
											],
											"query": [
												{
													"key": "userId",
													"value": "<integer>"
												},
												{
													"key": "token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Login/Register through Google",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Users/login-google?clientReturnUrl=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"login-google"
									],
									"query": [
										{
											"key": "clientReturnUrl",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/login-google?clientReturnUrl=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"login-google"
											],
											"query": [
												{
													"key": "clientReturnUrl",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Google Callback",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Users/HandleGoogleCallback?returnUrl=<string>&remoteError=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"HandleGoogleCallback"
									],
									"query": [
										{
											"key": "returnUrl",
											"value": "<string>"
										},
										{
											"key": "remoteError",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/HandleGoogleCallback?returnUrl=<string>&remoteError=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"HandleGoogleCallback"
											],
											"query": [
												{
													"key": "returnUrl",
													"value": "<string>"
												},
												{
													"key": "remoteError",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reset Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/reset-password?userId=<integer>&token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"reset-password"
									],
									"query": [
										{
											"key": "userId",
											"value": "<integer>"
										},
										{
											"key": "token",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/reset-password?userId=<integer>&token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"reset-password"
											],
											"query": [
												{
													"key": "userId",
													"value": "<integer>"
												},
												{
													"key": "token",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Forgot Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"forgot-password"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"forgot-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Administrator",
					"item": [
						{
							"name": "GET all flashcard collection titles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetAllFlashcardCollectionTitles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetAllFlashcardCollectionTitles"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetAllFlashcardCollectionTitles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetAllFlashcardCollectionTitles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET flashcard collection by title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetFlashcardCollectionByTitle?title=Lorem Ipsum Collection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetFlashcardCollectionByTitle"
									],
									"query": [
										{
											"key": "title",
											"value": "Lorem Ipsum Collection"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetFlashcardCollectionByTitle?title=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetFlashcardCollectionByTitle"
											],
											"query": [
												{
													"key": "title",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "POST upload image for Flashcard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1f03966e-8312-4e30-b98f-8ba111ccc963"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/UploadImage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"UploadImage"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/UploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"UploadImage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "POST Flashcard collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collectionId\": \"100\",\n  \"title\": \"Lorem Ipsum Collection\",\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": 1,\n      \"frontContentType\": \"Text\",\n      \"frontText\": \"Lorem ipsum dolor sit amet\",\n      \"frontImagePath\": \"\",\n      \"backContentType\": \"Text\",\n      \"backText\": \"Consectetur adipiscing elit\",\n      \"backImagePath\": \"\"\n    },\n    {\n      \"flashcardId\": 2,\n      \"frontContentType\": \"Image\",\n      \"frontText\": \"\",\n      \"frontImagePath\": \"/uploads/flashcards/{{imageFilename}}\",\n      \"backContentType\": \"text\",\n      \"backText\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"backImagePath\": \"\"\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/PostFlashcardCollection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"PostFlashcardCollection"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collectionId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    },\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/PostFlashcardCollection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"PostFlashcardCollection"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "PUT update flashcard collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collectionId\": \"100\",\n  \"title\": \"Lorem Ipsum\",\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": 1,\n      \"frontContentType\": \"Text\",\n      \"frontText\": \"Lorem ipsum dolor sit amet\",\n      \"frontImagePath\": \"\",\n      \"backContentType\": \"Text\",\n      \"backText\": \"Consectetur adipiscing elit\",\n      \"backImagePath\": \"\"\n    },\n    {\n      \"flashcardId\": 2,\n      \"frontContentType\": \"Image\",\n      \"frontText\": \"\",\n      \"frontImagePath\": \"/uploads/flashcards/{{imageFilename}}\",\n      \"backContentType\": \"text\",\n      \"backText\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n      \"backImagePath\": \"\"\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/UpdateFlashcardCollection/:collectionId?=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"UpdateFlashcardCollection",
										":collectionId"
									],
									"query": [
										{
											"key": "",
											"value": "3"
										}
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "3",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collectionId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    },\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/UpdateFlashcardCollection/:collectionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"UpdateFlashcardCollection",
												":collectionId"
											],
											"variable": [
												{
													"key": "collectionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "DELETE flashcard collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/DeleteFlashcardCollection?collectionId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"DeleteFlashcardCollection"
									],
									"query": [
										{
											"key": "collectionId",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/DeleteFlashcardCollection?collectionId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"DeleteFlashcardCollection"
											],
											"query": [
												{
													"key": "collectionId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET user by username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/username?username=borgertinget_superuser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"username"
									],
									"query": [
										{
											"key": "username",
											"value": "borgertinget_superuser"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/username?username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"username"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update user by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"borgertinget_superloser\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/:userId?=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										":userId"
									],
									"query": [
										{
											"key": "",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET all Polidle quotes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetAllQuotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetAllQuotes"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetAllQuotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetAllQuotes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET Polidle Quote by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/GetQuoteById?quoteId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"GetQuoteById"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/GetQuoteById?quoteId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"GetQuoteById"
											],
											"query": [
												{
													"key": "quoteId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "PUT update Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteId\": \"1\",\n  \"quoteText\": \"Postman\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/EditQuote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"EditQuote"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<integer>\",\n  \"quoteText\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/EditQuote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"EditQuote"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET aktor id by twitter id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Administrator/lookup/aktorId?twitterId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Administrator",
										"lookup",
										"aktorId"
									],
									"query": [
										{
											"key": "twitterId",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Administrator/lookup/aktorId?twitterId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Administrator",
												"lookup",
												"aktorId"
											],
											"query": [
												{
													"key": "twitterId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Aktor",
					"item": [
						{
							"name": "Get all Politicians",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										"all"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												"all"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "GET Politician by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "206",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"biografi\": \"<string>\",\n  \"fornavn\": \"<string>\",\n  \"efternavn\": \"<string>\",\n  \"typeid\": \"<integer>\",\n  \"gruppeNavnKort\": \"<string>\",\n  \"navn\": \"<string>\",\n  \"opdateringsdato\": \"<dateTime>\",\n  \"periodeid\": \"<integer>\",\n  \"slutdato\": \"<dateTime>\",\n  \"startdato\": \"<dateTime>\",\n  \"party\": \"<string>\",\n  \"partyShortname\": \"<string>\",\n  \"sex\": \"<string>\",\n  \"born\": \"<string>\",\n  \"educationStatistic\": \"<string>\",\n  \"pictureMiRes\": \"<string>\",\n  \"functionFormattedTitle\": \"<string>\",\n  \"functionStartDate\": \"<string>\",\n  \"positionsOfTrust\": \"<string>\",\n  \"email\": \"<string>\",\n  \"ministerTitel\": \"<string>\",\n  \"ministers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"spokesmen\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"parliamentaryPositionsOfTrust\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"constituencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nominations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"educations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"occupations\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"publicationTitles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"quotes\": [\n    {\n      \"quoteText\": \"<string>\",\n      \"quoteId\": \"<integer>\",\n      \"aktorId\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    },\n    {\n      \"quoteText\": \"<string>\",\n      \"quoteId\": \"<integer>\",\n      \"aktorId\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    }\n  ],\n  \"gamemodeTrackings\": [\n    {\n      \"gameMode\": 1,\n      \"politikerId\": \"<integer>\",\n      \"lastSelectedDate\": \"<date>\",\n      \"algoWeight\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    },\n    {\n      \"gameMode\": 0,\n      \"politikerId\": \"<integer>\",\n      \"lastSelectedDate\": \"<date>\",\n      \"algoWeight\": \"<integer>\",\n      \"politician\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    }\n  ],\n  \"dailySelections\": [\n    {\n      \"gameMode\": 1,\n      \"selectionDate\": \"<date>\",\n      \"selectedPolitikerID\": \"<integer>\",\n      \"selectedQuoteText\": \"<string>\",\n      \"selectedPolitiker\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    },\n    {\n      \"gameMode\": 2,\n      \"selectionDate\": \"<date>\",\n      \"selectedPolitikerID\": \"<integer>\",\n      \"selectedQuoteText\": \"<string>\",\n      \"selectedPolitiker\": {\n        \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Fetch all  Parties and Politicians",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/fetch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										"fetch"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/fetch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												"fetch"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET party by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Aktor/GetParty/:partyName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Aktor",
										"GetParty",
										":partyName"
									],
									"variable": [
										{
											"key": "partyName",
											"value": "Venstre",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Aktor/GetParty/:partyName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Aktor",
												"GetParty",
												":partyName"
											],
											"variable": [
												{
													"key": "partyName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 1,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Calendar",
					"item": [
						{
							"name": "events",
							"item": [
								{
									"name": "GET all events",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"startDateTimeUtc\": \"<dateTime>\",\n    \"location\": \"<string>\",\n    \"sourceUrl\": \"<string>\",\n    \"interestedCount\": \"<integer>\",\n    \"isCurrentUserInterested\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"startDateTimeUtc\": \"<dateTime>\",\n    \"location\": \"<string>\",\n    \"sourceUrl\": \"<string>\",\n    \"interestedCount\": \"<integer>\",\n    \"isCurrentUserInterested\": \"<boolean>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Create Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"1\",\n  \"title\": \"Lorem Ipsum Dolor Sit Amet\",\n  \"startDateTimeUtc\": \"2025-06-15T14:00:00Z\",\n  \"location\": \"1234 Lorem Street, Ipsum City\",\n  \"sourceUrl\": \"https://example.com/events/lorem-ipsum\",\n  \"interestedCount\": 42,\n  \"isCurrentUserInterested\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"startDateTimeUtc\": \"<dateTime>\",\n  \"location\": \"<string>\",\n  \"sourceUrl\": \"<string>\",\n  \"interestedCount\": \"<integer>\",\n  \"isCurrentUserInterested\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"startDateTimeUtc\": \"<dateTime>\",\n  \"location\": \"<string>\",\n  \"sourceUrl\": \"<string>\",\n  \"interestedCount\": \"<integer>\",\n  \"isCurrentUserInterested\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "GET amount intrested in Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/get-amount-interested/:eventId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												"get-amount-interested",
												":eventId"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/get-amount-interested/:eventId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														"get-amount-interested",
														":eventId"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<integer>"
										}
									]
								},
								{
									"name": "Update Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"{{EventToUpdate}}\",\n  \"title\": \"Lorem Ipsum Dolor Sit Amet\",\n  \"startDateTimeUtc\": \"2025-05-26T14:00:00Z\",\n  \"location\": \"1234 Lorem Street, Ipsum City\",\n  \"sourceUrl\": \"https://example.com/events/lorem-ipsum\",\n  \"interestedCount\": 42,\n  \"isCurrentUserInterested\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"startDateTimeUtc\": \"<dateTime>\",\n  \"location\": \"<string>\",\n  \"sourceUrl\": \"<string>\",\n  \"interestedCount\": \"<integer>\",\n  \"isCurrentUserInterested\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Toggle intrest in event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/toggle-interest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												"toggle-interest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/toggle-interest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														"toggle-interest",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{EventToUpdate}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Calendar/events/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Calendar",
														"events",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Run Calendar scraper",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Calendar/run-calendar-scraper",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Calendar",
										"run-calendar-scraper"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Calendar/run-calendar-scraper",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Calendar",
												"run-calendar-scraper"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "GET your own subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"subscriptions"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"subscriptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "feed",
					"item": [
						{
							"name": "GET your feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/feed?page=1&pageSize=5&politicianId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"feed"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "5"
										},
										{
											"key": "politicianId",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/feed?page=1&pageSize=5&politicianId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"feed"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "5"
												},
												{
													"key": "politicianId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"tweets\": [\n    {\n      \"authorHandle\": \"<string>\",\n      \"authorName\": \"<string>\",\n      \"text\": \"<string>\",\n      \"twitterTweetId\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"likes\": \"<integer>\",\n      \"retweets\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\"\n    },\n    {\n      \"authorHandle\": \"<string>\",\n      \"authorName\": \"<string>\",\n      \"text\": \"<string>\",\n      \"twitterTweetId\": \"<string>\",\n      \"imageUrl\": \"<string>\",\n      \"likes\": \"<integer>\",\n      \"retweets\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\"\n    }\n  ],\n  \"hasMore\": \"<boolean>\",\n  \"latestPolls\": [\n    {\n      \"id\": \"<integer>\",\n      \"question\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"endedAt\": \"<dateTime>\",\n      \"isActive\": \"<boolean>\",\n      \"politicianId\": \"<integer>\",\n      \"politicianName\": \"<string>\",\n      \"politicianHandle\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        }\n      ],\n      \"currentUserVoteOptionId\": \"<integer>\",\n      \"totalVotes\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"question\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"endedAt\": \"<dateTime>\",\n      \"isActive\": \"<boolean>\",\n      \"politicianId\": \"<integer>\",\n      \"politicianName\": \"<string>\",\n      \"politicianHandle\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"votes\": \"<integer>\"\n        }\n      ],\n      \"currentUserVoteOptionId\": \"<integer>\",\n      \"totalVotes\": \"<integer>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Flashcards",
					"item": [
						{
							"name": "GET all collections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Flashcards/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Flashcards",
										"collections"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Flashcards/collections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Flashcards",
												"collections"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"collectionId\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"displayOrder\": \"<integer>\"\n  },\n  {\n    \"collectionId\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"displayOrder\": \"<integer>\"\n  }\n]"
								}
							]
						},
						{
							"name": "GET collection by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Flashcards/collections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Flashcards",
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Flashcards/collections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Flashcards",
												"collections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"collectionId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"flashcards\": [\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    },\n    {\n      \"flashcardId\": \"<integer>\",\n      \"frontContentType\": \"<string>\",\n      \"frontText\": \"<string>\",\n      \"frontImagePath\": \"<string>\",\n      \"backContentType\": \"<string>\",\n      \"backText\": \"<string>\",\n      \"backImagePath\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Pages",
					"item": [
						{
							"name": "GET ALL pages by structure",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/structure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										"structure"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/structure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												"structure"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"parentPageId\": \"<integer>\",\n    \"displayOrder\": \"<integer>\",\n    \"hasChildren\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"parentPageId\": \"<integer>\",\n    \"displayOrder\": \"<integer>\",\n    \"hasChildren\": \"<boolean>\"\n  }\n]"
								}
							]
						},
						{
							"name": "POST new page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Understanding Lorem Ipsum\",\n  \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id dolor id nibh ultricies vehicula ut id elit.\",\n  \"parentPageId\": null,\n  \"displayOrder\": 1,\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"What does 'Lorem ipsum' typically represent?\",\n      \"id\": 1,\n      \"options\": [\n        {\n          \"optionText\": \"Placeholder text in publishing\",\n          \"id\": 1,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"A type of ancient Roman currency\",\n          \"id\": 2,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    },\n    {\n      \"questionText\": \"Which phrase follows 'Lorem ipsum dolor sit amet'?\",\n      \"id\": 2,\n      \"options\": [\n        {\n          \"optionText\": \"Consectetur adipiscing elit\",\n          \"id\": 3,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"Sed do eiusmod tempor\",\n          \"id\": 4,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"displayOrder\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Pages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"previousSiblingId\": \"<integer>\",\n  \"nextSiblingId\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get page by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"previousSiblingId\": \"<integer>\",\n  \"nextSiblingId\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"questionText\": \"<string>\",\n      \"options\": [\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"optionText\": \"<string>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "GET order of child pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id/sectionorder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id",
										"sectionorder"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id/sectionorder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id",
												"sectionorder"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<integer>\",\n  \"<integer>\"\n]"
								}
							]
						},
						{
							"name": "PUT page by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": {{PageToChange}},\n  \"title\": \"Understanding Lorem Ipsum\",\n  \"content\": \"Lorem ipsum dolor sit amet.\",\n  \"parentPageId\": null,\n  \"displayOrder\": 1,\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"What does 'Lorem ipsum' typically represent?\",\n      \"id\": 1,\n      \"options\": [\n        {\n          \"optionText\": \"Placeholder text in publishing\",\n          \"id\": 1,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"A type of ancient Roman currency\",\n          \"id\": 2,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    },\n    {\n      \"questionText\": \"Which phrase follows 'Lorem ipsum dolor sit amet'?\",\n      \"id\": 2,\n      \"options\": [\n        {\n          \"optionText\": \"Consectetur adipiscing elit\",\n          \"id\": 3,\n          \"isCorrect\": true,\n          \"displayOrder\": 1\n        },\n        {\n          \"optionText\": \"Sed do eiusmod tempor\",\n          \"id\": 4,\n          \"isCorrect\": false,\n          \"displayOrder\": 2\n        }\n      ]\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"parentPageId\": \"<integer>\",\n  \"displayOrder\": \"<integer>\",\n  \"associatedQuestions\": [\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"questionText\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"options\": [\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        },\n        {\n          \"optionText\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"isCorrect\": \"<boolean>\",\n          \"displayOrder\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "DELETE page by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Pages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Answers",
					"item": [
						{
							"name": "Check Answers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"questionId\": \"1\",\n  \"selectedAnswerOptionId\": \"1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Answers/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Answers",
										"check"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"questionId\": \"<integer>\",\n  \"selectedAnswerOptionId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Answers/check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Answers",
												"check"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isCorrect\": \"<boolean>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Party",
					"item": [
						{
							"name": "GET all parties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Party/Parties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Party",
										"Parties"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Party/Parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Parties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"partyId\": \"<integer>\",\n    \"partyName\": \"<string>\",\n    \"partyShortName\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"stats\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"chairmanId\": \"<integer>\",\n    \"viceChairmanId\": \"<integer>\",\n    \"secretaryId\": \"<integer>\",\n    \"spokesmanId\": \"<integer>\",\n    \"chairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 2,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"viceChairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"secretary\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"spokesman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 2,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"memberIds\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  {\n    \"partyId\": \"<integer>\",\n    \"partyName\": \"<string>\",\n    \"partyShortName\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"stats\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"chairmanId\": \"<integer>\",\n    \"viceChairmanId\": \"<integer>\",\n    \"secretaryId\": \"<integer>\",\n    \"spokesmanId\": \"<integer>\",\n    \"chairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 2,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"viceChairman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"secretary\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 0,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 1,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 2,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"spokesman\": {\n      \"id\": \"<integer>\",\n      \"biografi\": \"<string>\",\n      \"fornavn\": \"<string>\",\n      \"efternavn\": \"<string>\",\n      \"typeid\": \"<integer>\",\n      \"gruppeNavnKort\": \"<string>\",\n      \"navn\": \"<string>\",\n      \"opdateringsdato\": \"<dateTime>\",\n      \"periodeid\": \"<integer>\",\n      \"slutdato\": \"<dateTime>\",\n      \"startdato\": \"<dateTime>\",\n      \"party\": \"<string>\",\n      \"partyShortname\": \"<string>\",\n      \"sex\": \"<string>\",\n      \"born\": \"<string>\",\n      \"educationStatistic\": \"<string>\",\n      \"pictureMiRes\": \"<string>\",\n      \"functionFormattedTitle\": \"<string>\",\n      \"functionStartDate\": \"<string>\",\n      \"positionsOfTrust\": \"<string>\",\n      \"email\": \"<string>\",\n      \"ministerTitel\": \"<string>\",\n      \"ministers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"spokesmen\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parliamentaryPositionsOfTrust\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"constituencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nominations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"educations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"occupations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publicationTitles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quotes\": [\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"quoteText\": \"<string>\",\n          \"quoteId\": \"<integer>\",\n          \"aktorId\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"gamemodeTrackings\": [\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 1,\n          \"politikerId\": \"<integer>\",\n          \"lastSelectedDate\": \"<date>\",\n          \"algoWeight\": \"<integer>\",\n          \"politician\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ],\n      \"dailySelections\": [\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        },\n        {\n          \"gameMode\": 0,\n          \"selectionDate\": \"<date>\",\n          \"selectedPolitikerID\": \"<integer>\",\n          \"selectedQuoteText\": \"<string>\",\n          \"selectedPolitiker\": {\n            \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n          }\n        }\n      ]\n    },\n    \"memberIds\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Update party by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"partyId\": \"5\",\n  \"partyProgram\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin vitae nunc sed velit dignissim sodales.\",\n  \"politics\": \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\",\n  \"history\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Party/:partyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Party",
										":partyId"
									],
									"variable": [
										{
											"key": "partyId",
											"value": "5"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"partyId\": \"<integer>\",\n  \"partyName\": \"<string>\",\n  \"partyShortName\": \"<string>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\",\n  \"stats\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"chairmanId\": \"<integer>\",\n  \"viceChairmanId\": \"<integer>\",\n  \"secretaryId\": \"<integer>\",\n  \"spokesmanId\": \"<integer>\",\n  \"chairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 2,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"viceChairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"secretary\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"spokesman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"memberIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"partyId\": \"<integer>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyId"
											],
											"variable": [
												{
													"key": "partyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get party by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Party/:partyName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Party",
										":partyName"
									],
									"variable": [
										{
											"key": "partyName",
											"value": "Venstre"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Party/Party/:partyName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Party",
												"Party",
												":partyName"
											],
											"variable": [
												{
													"key": "partyName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"partyId\": \"<integer>\",\n  \"partyName\": \"<string>\",\n  \"partyShortName\": \"<string>\",\n  \"partyProgram\": \"<string>\",\n  \"politics\": \"<string>\",\n  \"history\": \"<string>\",\n  \"stats\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"chairmanId\": \"<integer>\",\n  \"viceChairmanId\": \"<integer>\",\n  \"secretaryId\": \"<integer>\",\n  \"spokesmanId\": \"<integer>\",\n  \"chairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 2,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"viceChairman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 0,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"secretary\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 1,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"spokesman\": {\n    \"id\": \"<integer>\",\n    \"biografi\": \"<string>\",\n    \"fornavn\": \"<string>\",\n    \"efternavn\": \"<string>\",\n    \"typeid\": \"<integer>\",\n    \"gruppeNavnKort\": \"<string>\",\n    \"navn\": \"<string>\",\n    \"opdateringsdato\": \"<dateTime>\",\n    \"periodeid\": \"<integer>\",\n    \"slutdato\": \"<dateTime>\",\n    \"startdato\": \"<dateTime>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"sex\": \"<string>\",\n    \"born\": \"<string>\",\n    \"educationStatistic\": \"<string>\",\n    \"pictureMiRes\": \"<string>\",\n    \"functionFormattedTitle\": \"<string>\",\n    \"functionStartDate\": \"<string>\",\n    \"positionsOfTrust\": \"<string>\",\n    \"email\": \"<string>\",\n    \"ministerTitel\": \"<string>\",\n    \"ministers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"spokesmen\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parliamentaryPositionsOfTrust\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nominations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"educations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"occupations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"publicationTitles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quotes\": [\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"quoteText\": \"<string>\",\n        \"quoteId\": \"<integer>\",\n        \"aktorId\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"gamemodeTrackings\": [\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 0,\n        \"politikerId\": \"<integer>\",\n        \"lastSelectedDate\": \"<date>\",\n        \"algoWeight\": \"<integer>\",\n        \"politician\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ],\n    \"dailySelections\": [\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      },\n      {\n        \"gameMode\": 2,\n        \"selectionDate\": \"<date>\",\n        \"selectedPolitikerID\": \"<integer>\",\n        \"selectedQuoteText\": \"<string>\",\n        \"selectedPolitiker\": {\n          \"value\": \"<Circular reference to #/components/schemas/Aktor detected>\"\n        }\n      }\n    ]\n  },\n  \"memberIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Polidle",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "Generate todays answers",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/polidle/admin/generate-today?overwrite=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"polidle",
												"admin",
												"generate-today"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "false"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-today?overwrite=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-today"
													],
													"query": [
														{
															"key": "overwrite",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-today?overwrite=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-today"
													],
													"query": [
														{
															"key": "overwrite",
															"value": "false"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								},
								{
									"name": "POST generate specific dates answers",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/polidle/admin/generate-specific-date?date=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"polidle",
												"admin",
												"generate-specific-date"
											],
											"query": [
												{
													"key": "date",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-specific-date?date=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-specific-date"
													],
													"query": [
														{
															"key": "date",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/generate-specific-date?date=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"generate-specific-date"
													],
													"query": [
														{
															"key": "date",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Seed aktor quotes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/polidle/admin/seed-all-aktor-quotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"polidle",
												"admin",
												"seed-all-aktor-quotes"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/seed-all-aktor-quotes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"seed-all-aktor-quotes"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/polidle/admin/seed-all-aktor-quotes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"polidle",
														"admin",
														"seed-all-aktor-quotes"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						},
						{
							"name": "GET todays quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/quote/today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"quote",
										"today"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"quoteText\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/quote/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"quote",
												"today"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET todays photo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/photo/today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"photo",
										"today"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"photoUrl\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/photo/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"photo",
												"today"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET todays classic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/classic/today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"classic",
										"today"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"politikerNavn\": \"<string>\",\n  \"pictureUrl\": \"<string>\",\n  \"køn\": \"<string>\",\n  \"partyShortname\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"region\": \"<string>\",\n  \"uddannelse\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/classic/today",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"classic",
												"today"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET Search politicians",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/politicians?search=Troels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"politicians"
									],
									"query": [
										{
											"key": "search",
											"value": "Troels"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/politicians?search=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"politicians"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"politikerNavn\": \"<string>\",\n    \"pictureUrl\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"politikerNavn\": \"<string>\",\n    \"pictureUrl\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/politicians?search=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"politicians"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "POST guess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"206\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polidle/guess",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polidle",
										"guess"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isCorrectGuess\": \"<boolean>\",\n  \"feedback\": {\n    \"commodo936\": 0,\n    \"proident_960\": 3,\n    \"id__8d\": 0\n  },\n  \"guessedPolitician\": {\n    \"id\": \"<integer>\",\n    \"politikerNavn\": \"<string>\",\n    \"pictureUrl\": \"<string>\",\n    \"køn\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"age\": \"<integer>\",\n    \"region\": \"<string>\",\n    \"uddannelse\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gameMode\": 1,\n  \"guessedPoliticianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polidle/guess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polidle",
												"guess"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Polls",
					"item": [
						{
							"name": "GET all polls",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"question\": \"<string>\",\n    \"politicianTwitterId\": \"<integer>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"question\": \"<string>\",\n    \"politicianTwitterId\": \"<integer>\"\n  }\n]"
								}
							]
						},
						{
							"name": "POST poll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": [\n    \"Lorem ipsum dolor\",\n    \"Sit amet consectetur\"\n  ],\n  \"politicianTwitterId\": 3,\n  \"question\": \"Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur?\",\n  \"endedAt\": \"2025-06-01T12:00:00Z\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"politicianTwitterId\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"endedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"isActive\": \"<boolean>\",\n  \"politicianId\": \"<integer>\",\n  \"politicianName\": \"<string>\",\n  \"politicianHandle\": \"<string>\",\n  \"options\": [\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    }\n  ],\n  \"currentUserVoteOptionId\": \"<integer>\",\n  \"totalVotes\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "GET poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"isActive\": \"<boolean>\",\n  \"politicianId\": \"<integer>\",\n  \"politicianName\": \"<string>\",\n  \"politicianHandle\": \"<string>\",\n  \"options\": [\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"optionText\": \"<string>\",\n      \"votes\": \"<integer>\"\n    }\n  ],\n  \"currentUserVoteOptionId\": \"<integer>\",\n  \"totalVotes\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "PUT poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": [\n    \"Lorem ipsum dolor\",\n    \"Sit amet consectetur\",\n    \"Adipiscing elit quisque\"\n  ],\n  \"politicianTwitterId\": 3,\n  \"question\": \"Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur?\",\n  \"endedAt\": \"2025-06-01T12:00:00Z\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PollToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"question\": \"<string>\",\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"politicianTwitterId\": \"<integer>\",\n  \"endedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Vote for poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"optionId\": \"1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:pollId/vote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":pollId",
										"vote"
									],
									"variable": [
										{
											"key": "pollId",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"optionId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:pollId/vote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":pollId",
												"vote"
											],
											"variable": [
												{
													"key": "pollId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "DELETE poll by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Polls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Polls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PollToChange}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Polls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Polls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "GET Search Borgertinget",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Search?query=Troels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Search"
									],
									"query": [
										{
											"key": "query",
											"value": "Troels"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"dataType\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"aktorName\": \"<string>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"pictureUrl\": \"<string>\",\n    \"ministerTitle\": \"<string>\",\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"flashcardId\": \"<integer>\",\n    \"collectionId\": \"<integer>\",\n    \"collectionTitle\": \"<string>\",\n    \"frontText\": \"<string>\",\n    \"backText\": \"<string>\",\n    \"frontImagePath\": \"<string>\",\n    \"backImagePath\": \"<string>\",\n    \"suggest\": {\n      \"contexts\": {\n        \"adipisicing_4\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"input\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"weight\": \"<integer>\"\n    },\n    \"partyName\": \"<string>\",\n    \"partyShortNameFromParty\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"pageTitle\": \"<string>\",\n    \"pageContent\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"dataType\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"aktorName\": \"<string>\",\n    \"party\": \"<string>\",\n    \"partyShortname\": \"<string>\",\n    \"pictureUrl\": \"<string>\",\n    \"ministerTitle\": \"<string>\",\n    \"constituencies\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"flashcardId\": \"<integer>\",\n    \"collectionId\": \"<integer>\",\n    \"collectionTitle\": \"<string>\",\n    \"frontText\": \"<string>\",\n    \"backText\": \"<string>\",\n    \"frontImagePath\": \"<string>\",\n    \"backImagePath\": \"<string>\",\n    \"suggest\": {\n      \"contexts\": {\n        \"fugiat_1c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"est_d1d\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"occaecat_c00\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"input\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"weight\": \"<integer>\"\n    },\n    \"partyName\": \"<string>\",\n    \"partyShortNameFromParty\": \"<string>\",\n    \"partyProgram\": \"<string>\",\n    \"politics\": \"<string>\",\n    \"history\": \"<string>\",\n    \"pageTitle\": \"<string>\",\n    \"pageContent\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "GET search sugestions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Search/suggest?prefix=Troels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Search",
										"suggest"
									],
									"query": [
										{
											"key": "prefix",
											"value": "Troels"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/suggest?prefix=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"suggest"
											],
											"query": [
												{
													"key": "prefix",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/suggest?prefix=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"suggest"
											],
											"query": [
												{
													"key": "prefix",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/suggest?prefix=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"suggest"
											],
											"query": [
												{
													"key": "prefix",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "ADMIN reindex Search",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Search/ensure-and-reindex",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Search",
										"ensure-and-reindex"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/ensure-and-reindex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"ensure-and-reindex"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Search/ensure-and-reindex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Search",
												"ensure-and-reindex"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Subscription",
					"item": [
						{
							"name": "GET PoliticianTwitterId by AktorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Subscription/lookup/politicianTwitterId?aktorId=206",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Subscription",
										"lookup",
										"politicianTwitterId"
									],
									"query": [
										{
											"key": "aktorId",
											"value": "206"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Subscription/lookup/politicianTwitterId?aktorId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Subscription",
												"lookup",
												"politicianTwitterId"
											],
											"query": [
												{
													"key": "aktorId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Subscribe by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"politicianId\": \"3\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Subscription"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"politicianId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Subscription"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unsubscribe to Politician by twitId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Subscription/:politicianTwitterId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Subscription",
										":politicianTwitterId"
									],
									"variable": [
										{
											"key": "politicianTwitterId",
											"value": "3",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Subscription/:politicianTwitterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Subscription",
												":politicianTwitterId"
											],
											"variable": [
												{
													"key": "politicianTwitterId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{userToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5218"
		},
		{
			"key": "adminToken",
			"value": ""
		},
		{
			"key": "userToken",
			"value": ""
		},
		{
			"key": "imageFilename",
			"value": ""
		},
		{
			"key": "flashcardCollectionId",
			"value": ""
		},
		{
			"key": "PageToChange",
			"value": ""
		},
		{
			"key": "PollToChange",
			"value": ""
		},
		{
			"key": "PollToVote",
			"value": ""
		},
		{
			"key": "EventToUpdate",
			"value": ""
		}
	]
}