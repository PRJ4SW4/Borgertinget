name: CI/CD for Web App
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  backend:
    name: Backend (.NET 9.0)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0"

      - name: Restore dependencies
        run: dotnet restore backend

      - name: Build Backend
        run: dotnet build --configuration Release backend

      - name: Run Unit Tests with Coverage
        run: >
          dotnet test backend.tests/Backend.Tests.csproj
          --no-build --configuration Release
          --collect:"XPlat Code Coverage"

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: List coverage output for debug
        run: find . -name "coverage.cobertura.xml"

      - name: Generate Coverage Report
        run: |
          reportgenerator \
            -reports:"**/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:HtmlInline_AzurePipelines;Cobertura

      - name: Upload Coverage Report Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-report
          path: coverage-report

  frontend:
    name: Frontend (React.js)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: frontend

      - name: Lint Frontend Code
        run: npm run lint
        working-directory: frontend

      - name: Build Frontend
        run: npm run build
        working-directory: frontend

      - name: Run Frontend Tests
        run: npm test
        working-directory: frontend
